/*
 * $Id: AttributeSpec.java,v 1.4 2003/03/13 18:28:01 akarasulu Exp $
 *
 * -- (c) LDAPd Group                                                    --
 * -- Please refer to the LICENSE.txt file in the root directory of      --
 * -- any LDAPd project for copyright and distribution information.      --
 *
 */

package org.apache.eve.schema ;


import java.util.ArrayList ;
import java.util.Collection ;


/**
 * Attribute specification bean used to store the schema information for an
 * attribute definition.  This class is generated by the schema parser and
 * populated in part by it during the schema file load phase.  Other properties
 * of the bean are filled in afterwords in other phases during the
 * initialization of the schema manager.
 */
public class AttributeSpec
{

    //////////////////////////////
    // Specification Attributes //
    //////////////////////////////

    String m_oid ;
    ArrayList m_nameList = new ArrayList() ;
    String m_desc ;
    String m_equality ;
    String m_substr ;
    String m_ordering ;
    String m_syntax ;
    boolean m_isSingleValue = false ;
    boolean m_canUserModify = true ;
    String m_usage ;
    String m_superClass ;

    ////////////////////////////////////////
    // Implementation Inferred Attributes //
    ////////////////////////////////////////

    /** Directly references other child AttributeSpecs */
    ArrayList m_children = new ArrayList() ;

    /**
     * Gets the unique IANA registered Object IDentifier (OID) associated with
     * this attribute specification.
     *
     * @return String the object identifier.
     */
    public String getOid()
    {
        return m_oid ;
    }


    public Collection getAllNames()
    {
        return m_nameList ;
    }


    public String getDescription()
    {
        return m_desc ;
    }


    public String getEqualityMatch()
    {
        return m_equality ;
    }


    public String getSubstrMatch()
    {
        return m_substr ;
    }


    public String getOrderingMatch()
    {
        return m_ordering ;
    }


    public String getSyntaxOid()
    {
        return m_syntax ;
    }


    public boolean isSingleValue()
    {
        return m_isSingleValue ;
    }


    public boolean canUserModify()
    {
        return m_canUserModify ;
    }


    public String getUsage()
    {
        return m_usage ;
    }


    public String getSuperClass()
    {
        return m_superClass ;
    }


    public String toString()
    {
        return m_oid ;
    }
}
